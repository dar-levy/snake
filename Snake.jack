class Snake {
    field Array vertebras;
    field int headIndex;

    constructor Snake new(int Ax, int Ay, int Asize) {
        let vertebras = function Array new(50);
        vertebras[0] = Vertebra.new(0, 0, 10);
        do vertebras[0].draw();
        return this;
    }
    
    method void move(DirectionCondition condition) {
        currentIndex = headIndex;
        while(~(currentIndex < 0)) {
            do vertebras[currentIndex].move(condition);
            currentIndex = currentIndex - 1;
        }
    }

    // TODO: Eating shall happen only if the next move of head will be the fruit (direction is right & following coordinates are of the fruit)
    method void eat() {
        let Head = vertebras[headIndex];
        headIndex = headIndex + 1;
        vertebras[headIndex] = Head; //Vertebra.new(headIndex.x, headIndex.y, headIndex.currentDirection, 10)
        // TODO: Don't forget to dispose fruit

        return;
    }

    method void changeDirection(Condition DirectionCondition) {
        let currentIndex = 0;
        while(~(currentIndex = headIndex + 1)) {
            do vertebras[currentIndex].AddDirectionCondition(DirectionCondition);
            currentIndex = currentIndex + 1;
        }

        return;
    }

    method void dispose() {
        let currentIndex = headIndex;
        while(~(currentIndex = -1)) {
            do vertebras[currentIndex].dispose();
            currentIndex = currentIndex - 1;
        }

        do vertebras.dispose();
        do Memory.deAlloc(this);
        
        return;
    }
}