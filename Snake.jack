
class Snake {
    field Array vertebras;
    field int headIndex;

    constructor Snake new() {
        let vertebras = Array.new(50);
        let vertebras[0] = Vertebra.new(0, 0, 10);
        return this;
    }

    method Vertebra getHead() {
        return vertebras[headIndex];
    }
    
    method void move(DirectionCondition condition) {
        let currentIndex = headIndex;
        while((~(currentIndex < 0)) & (~(condition.x = -1))) {
            do vertebras[currentIndex].move(condition);
            let currentIndex = currentIndex - 1;
        }

        return;
    }

    method void eat(Fruit fruit) {
        let head = vertebras[headIndex];
        let headIndex = headIndex + 1;
        let vertebras[headIndex] = Vertebra.new(fruit.x, fruit.y, head.size);
        let vertebras[headIndex].currentDirection = head.currentDirection;

        return;
    }

    method void dispose() {
        let currentIndex = headIndex;
        while(~(currentIndex < 0)) {
            do vertebras[currentIndex].dispose();
            let currentIndex = currentIndex - 1;
        }

        do vertebras.dispose();
        do Memory.deAlloc(this);
        
        return;
    }
}